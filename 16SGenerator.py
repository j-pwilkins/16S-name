import pandas as pd
from datetime import date
import random
import sys

# Variables required for whole program
Program = sys.argv[0]
today = date.today()
today = today.strftime("%d/%m/%Y")
Runs = int(sys.argv[1])
List = list(range(Runs))
Row = List[0]

# function to create random sequences of DNA
global DNA      # this bit is required for program to run, though not sure why
def DNA(length):
    return ''.join(random.choice('CGTA') for _ in range(length))

# Provide conserved regions for sequence
Template = 'AGAGTTTGATCCTGGCTCAGGATGAACGCTGGCGGCAGGCTTAATACATGCAAGTCGAACGGTAAGGCCGAGTGCAGCAATGCATGAGGTACACGAGTGGCGCACGGGTGCGTAACGCGTATGCAACCTGCCCCCAACCGGGACAAAACAGCTGGAAACGGCTGCTAATATCCCATAGCCACGCGGGAGGGCATCCTCCTGTGTGTAAAGATTCATTGGTTGGGGATGGGCATGCGTATTATTAGGTAGTTGGCGGGGTAACGGCCCACCAAGCCGACGATGATTAGGGGTCCTGAGAGGGTTAACCCCCACACTGGAACTGAGACACGGTCCAGACTCCTACGGGAGGCAGCAGTAGGGAATATTGGGCAATGGGAGCAATCCTGACCCAGCCATGCCGCGTGAAGGAAGACGGCCCTATGGGTTGTAAACTTCTTTTGCCGCAGAGTAAACCCGGTCACGTGTGGCCGGTTGAGAGTATGCGGCGAATAAGTATCGGCTAACTCCGTGCCAGCAGCCGCGGTAATACGGAGGATACAAGCGTTATCCGGATTTATTGGGTTTAAAGGGTGCGCAGGCGGACCGCTAAGTCAGGGGTGAAAAGTTGGGGCTTAACTCCAATCGTGCCTTTGATACTGGCGGACTAGAGTGCGATAGGCGTGGCCGGAATGTGGCGTGTAGCGGTGAAATGCTTAGATATGCCACGGAACACCGATCGAGAAGTCAGGTCACGAGTTCGCAACTGACGCTCATGCACGAAAGCGTGGGGATCAAACAGGATTAGATACCCTGGTAGTTCCACGCCGTAAACGATGATCACTCGTTGTCGGGGGGCGACCCTCGGTGGCCAAGCGAAAGCGATAAGTGATCCACCTGGGGAGTACGATCGCAAGGTTGAAACTCAAAGGAATTGACGGGGGCCCGCACAAGCGGAGGAGCATGTGGTTTAATTCGATGATACGCGAGGAACCTTACCCGGGCTTGAACGTAAGACGACGACGCAGGAGACTGCGTTTCCTTAGGGCGTTTTGCGAGGTGCTGCATGGTTGTCGTCAGCTCGTGCCGTGAGGTGTTAGGTTAAGTCCTGCAACGAGCGCAACCCTTACCTTCAGTTGCCAGCACGTAATGGTGGGGACTCTGGAGGAACTGCCTACGCAAGTAGAGAGGAAGGTGGGGATGACGTCAAATCAGCACGGCCCTTATGTCCGGGGCTACACACGTGCTACAATGGCGCGCACAGAGGGCAGCGACCCCGCGAGGGGGAGCGAATCCATGAAAGCGCGTCTCAGTCCGGATCGGAGTCTGGAACCCGACTCCGTGAAGTTGGATTCGCTAGTAATCGCGCATCAGCCATGACGCGGTGAATACGTTCCCGGGCCTTGTACACACCGCCCGTCAAGCCATGGAAGATAGTGGTACCTGAAGTCTGTACCCGCAAGGAGCGGCCTAAGGTAAAACTGTTAACTGGGGCTAAGTCGTAACAAGGTAGCCGTACCGGAAGGTGTGGCTGGATCACCTCCTTTCT'
C1, C2, C3, C4, C5, C6, C7, C8, C9, C10 = Template[:68], Template[99:136], Template[242:432], Template[497:575], Template[682:821], Template[879:985], Template[1043:1116], Template[1173:1242], Template [1294:1391], Template[1492:]
V1, V2, V3, V4, V5, V6, V7, V8, V9 = 31, 104, 65, 107, 68, 58, 57, 52, 101

# Build df & create 1st line
Sequence = C1 + DNA(V1) + C2 + DNA(V2) + C3 + DNA(V3) + C4 + DNA(V4) + C5 + DNA(V5) + C6 + DNA(V6) + C7 + DNA(V7) + C8 + DNA(V8) + C9 + DNA(V9) + C10
RDF = pd.DataFrame({'Input Index': [1], 'DB Found': Program, 'DB Name': 'Bacteria 1', 'DB Accession Number': '-', 'Date Accessed': today, '16S Sequence': Sequence}, index=[0])

# program to add rows to RDF
def CreateRow():
    max = int((1526 / 2) * (4 / 3))
    length = (random.randint(1, max))
    endposition = (random.randint(1 + length, max))
    startposition = endposition - length
    before = Template[:startposition]
    after = Template[endposition:]
    Insert = DNA(length)
    Row = List[0]
    Sequence = before + Insert + after
    Name = 'Bacteria ' + str(Row + 2)
    RDF2 = pd.DataFrame({'Input Index': Row + 2, 'DB Name': Name, 'DB Found': Program, 'DB Accession Number': '-', 'Date Accessed': today, '16S Sequence': Sequence}, index=[0])
    global RDF
    RDF = pd.concat([RDF, RDF2], ignore_index=True, axis=0)
    del List[0]

for i in range(Runs - 1):
    CreateRow()

RDF.to_csv("Input.csv", sep=',', index=False)

